name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

# Always force the use of Go modules
env:
  GO111MODULE: on

jobs:
  golangci:
    strategy:
      matrix:
        go-version: [1.15.x,1.16.x,1.17.x]
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.1.0
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: latest

#   staticcheckci:
#     name: "staticcheck"
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v1
#       with:
#         fetch-depth: 1
#     - run: "go test ./..."
#     - run: "go vet ./..."
#     - uses: dominikh/staticcheck-action@v1.2.0
#       with:
#         version: "2022.1"

#   tests:
#     runs-on: ubuntu-latest
#     env:
#       GO111MODULE: on
#     steps:
#       - name: Checkout Source
#         uses: actions/checkout@v2
#       - name: Run go-mnd
#         uses: tommy-muehle/go-mnd@master
#         with:
#           args: ./...



  build:
    runs-on: ubuntu-latest

    # strategy set
    strategy:
      matrix:
        go: ["1.15", "1.16", "1.17", "1.18"]

    steps:
      # Checkout latest code
      - name: Checkout repo
        uses: actions/checkout@v3
      # Setup the environment.
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version:  ${{ matrix.go }}

      # Execute vert check
      - name: vert check
        run: bash ./ci/vet.sh -install && bash ./ci/vet.sh

      # Run tests
      - name: run tests
        run: |
          cd ./test
          go test -timeout=50m
